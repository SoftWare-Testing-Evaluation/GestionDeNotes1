.modal-cover {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1000;
  transform: translateZ(0);
  background-color: rgba(0, 0, 0, 0.8);
}

.modal-area {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
   /* max-width: 80vh; */
   /* padding: 2.5em 1.5em 1.5em 1.5em; */
  background-color: var(--white);
  box-shadow: 0 0 10px 3px rgba(0, 0, 0, 0.1);
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
}

@media screen and (min-width: 500px) {
  /* Center the Modal! */
  .modal-area {
    left: 50%;
    top: 50%;
    height: auto;
    transform: translate(-50%, -50%);
    max-width: 30em;
    max-height: calc(100% - 1em);
  }
}

._modal-close {
  position: absolute;
  top: 0;
  right: 0;
  padding: 0.5em;
  line-height: 1;
  background: var(--bg);
  border: 0;
  box-shadow: 0;
  cursor: pointer;
  height: 50px;
}

._modal-close-icon {
  width: 25px;
  height: 25px;
  fill: transparent;
  stroke: black;
  stroke-linecap: round;
  stroke-width: 2;
}

.modal-body {
  padding-top: 0.25em;
}

._hide-visual {
  border: 0 !important;
  clip: rect(0 0 0 0) !important;
  height: 1px !important;
  margin: -1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  width: 1px !important;
  white-space: nowrap !important;
}

.form {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.form .validation {
  height: 7rem;
  width: 80%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.images-preview-container {
  display: flex;
  /* grid-template-rows: repeat(auto-fill, minmax(min(100px, 100%), 1fr)); */
  gap: 10px;
  margin-top: 40px;
}

.image-preview {
  width: 100px;
  display: inline-block;
  position: relative;
}

.image-preview img {
  width: 100%;
  height: 100px;
  object-fit: cover;
  border-radius: 10px;
}

.image-preview i,
.remove-img-spinner {
  position: absolute;
  top: -12px;
  left: -12px;
  font-size: 20px;
  cursor: pointer;
}

.image-preview i:hover {
  color: var(--appColor);
}
.react-loading-skeleton {
  background-color: var(--grey-300) !important;
}
.react-loading-skeleton::after {
  background-image: linear-gradient(
    90deg,
    var(--grey-300),
    var(--grey-200),
    var(--grey-300)
  ) !important;
}
